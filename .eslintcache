[{"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\index.tsx":"1","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\App.tsx":"2","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\context.ts":"3","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\test.object.assign.ts":"4","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\ImageStream.tsx":"5","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\Sidebar.tsx":"6","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\model\\ImageFromFilter.ts":"7","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\model\\Image.ts":"8","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\GalleryInScroll.tsx":"9","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\MyPhoto.tsx":"10","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\my-gallery.tsx":"11","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\widgets\\header.tsx":"12","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\browse-page.tsx":"13","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\check-md5.tsx":"14","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\one-source-page.tsx":"15","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\check-source.tsx":"16","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\scan-dir.tsx":"17","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\unscanned.tsx":"18","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\scan-meta.tsx":"19"},{"size":232,"mtime":1611940295847,"results":"20","hashOfConfig":"21"},{"size":2739,"mtime":1612263017107,"results":"22","hashOfConfig":"21"},{"size":1074,"mtime":1612132311656,"results":"23","hashOfConfig":"21"},{"size":215,"mtime":1611940295898,"results":"24","hashOfConfig":"21"},{"size":4194,"mtime":1612132496552,"results":"25","hashOfConfig":"21"},{"size":1283,"mtime":1611952090388,"results":"26","hashOfConfig":"21"},{"size":354,"mtime":1611951917523,"results":"27","hashOfConfig":"21"},{"size":3860,"mtime":1611951888613,"results":"28","hashOfConfig":"21"},{"size":2214,"mtime":1611950367369,"results":"29","hashOfConfig":"21"},{"size":1653,"mtime":1612132289704,"results":"30","hashOfConfig":"21"},{"size":1553,"mtime":1611950367375,"results":"31","hashOfConfig":"21"},{"size":490,"mtime":1612172171467,"results":"32","hashOfConfig":"21"},{"size":1639,"mtime":1612218860724,"results":"33","hashOfConfig":"21"},{"size":2738,"mtime":1612259187020,"results":"34","hashOfConfig":"21"},{"size":1352,"mtime":1612268769229,"results":"35","hashOfConfig":"21"},{"size":1354,"mtime":1612218942249,"results":"36","hashOfConfig":"21"},{"size":2658,"mtime":1612220636749,"results":"37","hashOfConfig":"21"},{"size":2693,"mtime":1612266943515,"results":"38","hashOfConfig":"21"},{"size":2022,"mtime":1612268134102,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1pqf0us",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\index.tsx",[],["84","85"],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\App.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\context.ts",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\test.object.assign.ts",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\ImageStream.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\Sidebar.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\model\\ImageFromFilter.ts",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\model\\Image.ts",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\GalleryInScroll.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\MyPhoto.tsx",[],["86","87"],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\my-gallery.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\widgets\\header.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\browse-page.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\check-md5.tsx",["88"],"import { Source } from \"../App\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { context } from \"../context\";\n// @ts-ignore\nimport ndjsonStream from \"can-ndjson-stream\";\nimport { GoInfo } from \"react-icons/all\";\n\nexport default function CheckMD5(props: { source: Source }) {\n\tconst ctx = useContext(context);\n\tconst [loading, setLoading] = useState(false);\n\tconst [folders, setFolders] = useState([] as string[]);\n\tconst [md5, setMD5] = useState(\"\");\n\tconst [error, setError] = useState((null as unknown) as string);\n\n\tconst fetchData = async () => {\n\t\tsetFolders([]);\n\t\tsetLoading(true);\n\t\tsetError(\"\");\n\t\tconst urlCheck = new URL(\"SourceScan\", ctx.baseUrl);\n\t\turlCheck.searchParams.set(\"id\", props.source.id.toString());\n\t\tconst res = await fetch(urlCheck.toString());\n\t\tconsole.warn(urlCheck.toString(), res.status, res.statusText);\n\t\tif (res.status !== 200) {\n\t\t\tsetError(res.statusText);\n\t\t\tsetLoading(false);\n\t\t\treturn;\n\t\t}\n\t\tconst exampleReader = ndjsonStream(res.body).getReader();\n\n\t\tlet result:\n\t\t\t| {\n\t\t\t\t\tdone: boolean;\n\t\t\t\t\tvalue?: { status: string; file: string[]; md5?: string };\n\t\t\t  }\n\t\t\t| undefined;\n\t\twhile (!result || !result.done) {\n\t\t\tresult = await exampleReader.read();\n\t\t\t// console.log(result);\n\t\t\tif (result && result.value) {\n\t\t\t\t// skip errors (status === 'err')\n\t\t\t\tif (\"file\" in result.value && result.value.status === \"lines\") {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tsetFolders((folders) => folders.concat(...result.value.file));\n\t\t\t\t}\n\t\t\t\tif (\"md5\" in result.value) {\n\t\t\t\t\tsetMD5(result.value.md5 ?? \"\");\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// autostart fetchData() is disabled as this is heavy load on the server\n\tuseEffect(() => {\n\t\t// noinspection JSIgnoredPromiseFromCall\n\t\t// fetchData();\n\t}, [props.source]);\n\n\tconst loadingProgress = loading ? (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\tDir: {folders.length}/{props.source.folders}\n\t\t\t</div>\n\t\t\t<progress\n\t\t\t\tvalue={folders.length}\n\t\t\t\tmax={props.source.folders}\n\t\t\t\tclassName=\"w-full\"\n\t\t\t/>\n\t\t</div>\n\t) : null;\n\n\tconst afterScan = folders?.length ? (\n\t\t<div>\n\t\t\t<div>Dir: {folders?.length ?? props.source.folders}</div>\n\t\t\t<div>\n\t\t\t\tMD5:{\" \"}\n\t\t\t\t<span\n\t\t\t\t\tclassName={md5 === props.source.md5 ? \"bg-green-300\" : \"bg-red-300\"}\n\t\t\t\t>\n\t\t\t\t\t{md5}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n\n\treturn (\n\t\t<div className=\"\">\n\t\t\t<button\n\t\t\t\tclassName=\"bg-yellow-300 p-1 rounded inline\"\n\t\t\t\tonClick={fetchData}\n\t\t\t\tdisabled={loading}\n\t\t\t>\n\t\t\t\tRescan\n\t\t\t</button>\n\t\t\t<GoInfo\n\t\t\t\tstyle={{ display: \"inline\", verticalAlign: \"top\" }}\n\t\t\t\ttitle=\"find all subdirectories and check md5 hash of their name to quickly see if this folder requires re-scanning\"\n\t\t\t/>\n\t\t\t{loadingProgress}\n\t\t\t{afterScan}\n\t\t\t{error && <div className=\"bg-red-300\">{error}</div>}\n\t\t</div>\n\t);\n}\n","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\one-source-page.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\check-source.tsx",["89"],"import { Source } from \"../App\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { context } from \"../context\";\nimport axios from \"redaxios\";\nimport { BarLoader } from \"react-spinners\";\n\ninterface CheckSourceState {\n  status: \"ok\" | \"error\";\n  error?: string;\n  files: number;\n  folders: number;\n}\n\nexport function CheckSource(props: { source: Source }) {\n  const ctx = useContext(context);\n  const [state, setState] = useState(\n    (null as unknown) as CheckSourceState | null\n  );\n  const [error, setError] = useState((null as unknown) as string);\n\n  async function fetchData() {\n    setState(null);\n    const urlCheck = new URL(\"CheckSource\", ctx.baseUrl);\n    urlCheck.searchParams.set(\"id\", props.source.id.toString());\n    try {\n      const res = await axios.get(urlCheck.toString());\n      setState(res.data);\n    } catch (e) {\n      setError(e.message);\n    }\n  }\n\n  useEffect(() => {\n    // noinspection JSIgnoredPromiseFromCall\n    fetchData();\n  }, [props.source]);\n\n  if (!state) {\n    return <BarLoader loading={true} />;\n  }\n  if (error && state?.status === \"ok\") {\n    return (\n      <button className=\"bg-red-300 p-1 rounded\" onClick={fetchData}>\n        {error} {state.error}\n      </button>\n    );\n  }\n  return (\n    <button className=\"bg-blue-300 p-1 rounded\" onClick={fetchData}>\n      Accessible\n    </button>\n  );\n}\n","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\scan-dir.tsx",[],"C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\unscanned.tsx",["90"],"import { Source } from \"../App\";\nimport { useContext, useState } from \"react\";\nimport { context } from \"../context\";\nimport { useQuery } from \"react-query\";\nimport axios from \"redaxios\";\nimport ScanMeta, { FileToScan } from \"./scan-meta\";\n\nfunction Top10(props: { filesToScan: FileToScan[] }) {\n\treturn (\n\t\t<>\n\t\t\t<hr />\n\t\t\t{props.filesToScan.slice(0, 10).map((el: FileToScan) => (\n\t\t\t\t<ScanMeta key={el.id} file={el} autoStart={false} />\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nfunction MetaScanProgress(props: { data: FileToScan[] }) {\n\tconst [current, setCurrent] = useState(0);\n\tconst [playState, setPlayState] = useState(false);\n\n\tconst play = () => {\n\t\tsetPlayState(true);\n\t\tnext();\n\t};\n\n\tconst stop = () => {\n\t\tsetPlayState(false);\n\t};\n\n\tconst next = () => {\n\t\tconsole.log(\"next\");\n\t\tif (playState && current < props.data.length - 1) {\n\t\t\tsetCurrent((current) => current + 1);\n\t\t}\n\t};\n\n\tif (!props.data.length) {\n\t\treturn <div>Done</div>;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<progress value={current} max={props.data.length} className=\"w-full\" />\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tonClick={play}\n\t\t\t\t\tdisabled={playState}\n\t\t\t\t\tclassName=\"bg-yellow-300 p-1 m-1 rounded\"\n\t\t\t\t>\n\t\t\t\t\tPlay\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={stop}\n\t\t\t\t\tdisabled={!playState}\n\t\t\t\t\tclassName=\"bg-red-300 p-1 m-1 rounded\"\n\t\t\t\t>\n\t\t\t\t\tStop\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={next}\n\t\t\t\t\tdisabled={!playState}\n\t\t\t\t\tclassName=\"bg-green-300 p-1 m-1 rounded\"\n\t\t\t\t>\n\t\t\t\t\tNext\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{current > 0 && (\n\t\t\t\t<ScanMeta file={props.data[current - 1]} autoStart={true} />\n\t\t\t)}\n\t\t\t<ScanMeta\n\t\t\t\tfile={props.data[current]}\n\t\t\t\tautoStart={playState}\n\t\t\t\tonDone={next}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default function Unscanned(props: { source: Source }) {\n\tconst ctx = useContext(context);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tdata,\n\t\trefetch,\n\t}: {\n\t\tisLoading: boolean;\n\t\terror: Error | null;\n\t\tdata: any;\n\t\trefetch: () => void;\n\t} = useQuery(\"GetUnscanned\", async () => {\n\t\tconst url = new URL(ctx.baseUrl.toString() + \"GetUnscanned\");\n\t\turl.searchParams.set(\"id\", props.source.id.toString());\n\t\tconst res = await axios.get(url.toString());\n\t\treturn res.data;\n\t});\n\n\tif (isLoading) return <div>Loading...</div>;\n\n\tconst refetchButton = (\n\t\t<button\n\t\t\tclassName=\"bg-yellow-300 p-1 rounded\"\n\t\t\tonClick={refetch}\n\t\t\tdisabled={isLoading}\n\t\t>\n\t\t\tRefetch\n\t\t</button>\n\t);\n\n\tif (error)\n\t\treturn (\n\t\t\t<div className=\"bg-red-300 p-2\">\n\t\t\t\t<p>An error has occurred: {error.message}</p>\n\t\t\t\t{refetchButton}\n\t\t\t</div>\n\t\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<p>Unscanned: {data.count}</p>\n\t\t\t{refetchButton}\n\t\t\t{/*<pre>{JSON.stringify(data, null, 2)}</pre>*/}\n\t\t\t{/*<Top10 data={data.filesToScan} />*/}\n\t\t\t<MetaScanProgress data={data.filesToScan} />\n\t\t</div>\n\t);\n}\n","C:\\AnypointStudio\\AnypointStudio\\slawa2021\\pinacotheque\\src\\browse\\scan-meta.tsx",["91","92"],"import { useContext } from \"react\";\nimport { context } from \"../context\";\nimport { QueryObserverBaseResult, useQuery } from \"react-query\";\nimport axios from \"redaxios\";\nimport { FadeLoader } from \"react-spinners\";\n\nexport interface FileToScan {\n\tid: number;\n}\n\nexport default function ScanMeta(props: {\n\tfile: FileToScan;\n\tautoStart?: boolean;\n\tonDone?: () => void;\n}) {\n\tconst ctx = useContext(context);\n\n\tconst { isLoading, isFetching, error, data, refetch } = useQuery(\n\t\t[\"ScanMeta\", props.file.id],\n\t\tasync () => {\n\t\t\tconst url = new URL(ctx.baseUrl.toString() + \"ScanMeta\");\n\t\t\turl.searchParams.set(\"fileID\", props.file.id.toString());\n\t\t\tconsole.log(url.toString());\n\t\t\tconst res = await axios.get(url.toString());\n\t\t\treturn res.data;\n\t\t},\n\t\t{\n\t\t\trefetchOnWindowFocus: false,\n\t\t\tenabled: props.autoStart,\n\t\t\tinitialData: {},\n\t\t}\n\t) as QueryObserverBaseResult<\n\t\t{\n\t\t\tthumbUrl: string;\n\t\t\tthumbMeta: {\n\t\t\t\timage: {\n\t\t\t\t\twidth: number;\n\t\t\t\t\theight: number;\n\t\t\t\t};\n\t\t\t};\n\t\t},\n\t\tError\n\t>;\n\n\t// if (isFetching)\n\t// \treturn (\n\t// \t\t<div className=\"inline-block\" style={{ width: 256, height: 144 }}>\n\t// \t\t\t<FadeLoader loading={true} />\n\t// \t\t</div>\n\t// \t);\n\n\tconst scanButton = (\n\t\t<button\n\t\t\tclassName=\"bg-yellow-300 p-1 rounded m-1\"\n\t\t\tonClick={() => refetch()}\n\t\t\tdisabled={isLoading}\n\t\t\tstyle={{ width: 256, height: 144 }}\n\t\t>\n\t\t\tScan Meta ({props.file.id})\n\t\t</button>\n\t);\n\n\tif (error)\n\t\treturn (\n\t\t\t<div className=\"bg-red-300 p-2\">\n\t\t\t\t<p>An error has occurred: {error.message}</p>\n\t\t\t\t{scanButton}\n\t\t\t</div>\n\t\t);\n\n\tif (data) {\n\t\tdata.thumbUrl && props.onDone && setTimeout(props.onDone, 500);\n\n\t\treturn (\n\t\t\t<span>\n\t\t\t\t{/*<pre>{JSON.stringify(data, null, 2)}</pre>*/}\n\t\t\t\t{data.thumbUrl && (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={data.thumbUrl}\n\t\t\t\t\t\talt={data.thumbUrl}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: data.thumbMeta.image.width ?? 256,\n\t\t\t\t\t\t\theight: data.thumbMeta.image.height ?? 144,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"inline p-1 m-1\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!data.thumbUrl && scanButton}\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn <div> some shit</div>;\n}\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":43,"column":17,"nodeType":"101","messageId":"102","endLine":43,"endColumn":66},{"ruleId":"103","severity":1,"message":"104","line":36,"column":6,"nodeType":"105","endLine":36,"endColumn":20,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":15},{"ruleId":"107","severity":1,"message":"111","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":20},{"ruleId":"107","severity":1,"message":"112","line":18,"column":21,"nodeType":"109","messageId":"110","endLine":18,"endColumn":31},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'result'.","ArrowFunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["115"],"@typescript-eslint/no-unused-vars","'Top10' is defined but never used.","Identifier","unusedVar","'FadeLoader' is defined but never used.","'isFetching' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [fetchData, props.source]",{"range":"118","text":"119"},[976,990],"[fetchData, props.source]"]